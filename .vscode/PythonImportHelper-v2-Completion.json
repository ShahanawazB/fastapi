[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "myApi",
        "description": "myApi",
        "isExtraImport": true,
        "detail": "myApi",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "myApi",
        "description": "myApi",
        "isExtraImport": true,
        "detail": "myApi",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "myApi",
        "description": "myApi",
        "isExtraImport": true,
        "detail": "myApi",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "importPath": "profiles.settings",
        "description": "profiles.settings",
        "isExtraImport": true,
        "detail": "profiles.settings",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sqlalchemy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "create_engine",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Boolean",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "sessionmaker",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "Session",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "declarative_base",
        "importPath": "sqlalchemy.ext.declarative",
        "description": "sqlalchemy.ext.declarative",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.declarative",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Query",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "starlette",
        "description": "starlette",
        "isExtraImport": true,
        "detail": "starlette",
        "documentation": {}
    },
    {
        "label": "models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "models",
        "description": "models",
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Todos",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "engine",
        "importPath": "database",
        "description": "database",
        "isExtraImport": true,
        "detail": "database",
        "documentation": {}
    },
    {
        "label": "SessionLocal",
        "importPath": "database",
        "description": "database",
        "isExtraImport": true,
        "detail": "database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "database",
        "description": "database",
        "isExtraImport": true,
        "detail": "database",
        "documentation": {}
    },
    {
        "label": "Annotated",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "Field",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "management",
        "importPath": "django.core",
        "description": "django.core",
        "isExtraImport": true,
        "detail": "django.core",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "myApi.migrations.0001_initial",
        "description": "myApi.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0011_update_proxy_permissions'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='UserProfile',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "myApi.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "myApi.migrations.0002_auto_20250430_1909",
        "description": "myApi.migrations.0002_auto_20250430_1909",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('myApi', '0001_initial'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='userprofile',\n            old_name='is_false',\n            new_name='is_staff',\n        ),",
        "detail": "myApi.migrations.0002_auto_20250430_1909",
        "documentation": {}
    },
    {
        "label": "MyapiConfig",
        "kind": 6,
        "importPath": "myApi.apps",
        "description": "myApi.apps",
        "peekOfCode": "class MyapiConfig(AppConfig):\n    name = 'myApi'",
        "detail": "myApi.apps",
        "documentation": {}
    },
    {
        "label": "UserProfileManager",
        "kind": 6,
        "importPath": "myApi.models",
        "description": "myApi.models",
        "peekOfCode": "class UserProfileManager(BaseUserManager):\n    def create_user(self, email, name, password = None):\n        if not email:\n            raise ValueError(\"user must have email address\")\n        email = self.normalize_email(email)\n        user = self.model(email= email, name=name)\n        user.set_password(password)\n        user.save(using=self._db)\n        return user \n    def create_superuser(self, email, name, password):",
        "detail": "myApi.models",
        "documentation": {}
    },
    {
        "label": "UserProfile",
        "kind": 6,
        "importPath": "myApi.models",
        "description": "myApi.models",
        "peekOfCode": "class UserProfile(AbstractBaseUser,PermissionsMixin):\n    email = models.EmailField(unique=True, max_length=255)\n    name = models.CharField(max_length=255)\n    is_active = models.BooleanField(default=True)\n    is_staff = models.BooleanField(default=True)\n    objects = UserProfileManager()\n    USERNAME_FIELD = 'email'\n    REQUIRED_FIELDS = ['name']\n    def get_full_name(self):\n        return self.name",
        "detail": "myApi.models",
        "documentation": {}
    },
    {
        "label": "HelloSerializer",
        "kind": 6,
        "importPath": "myApi.serializers",
        "description": "myApi.serializers",
        "peekOfCode": "class HelloSerializer(serializers.Serializer):\n    name = serializers.CharField(max_length = 10)",
        "detail": "myApi.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "myApi.urls",
        "description": "myApi.urls",
        "peekOfCode": "urlpatterns = [\n    path('hello-view', view=views.HelloApiView.as_view())\n]",
        "detail": "myApi.urls",
        "documentation": {}
    },
    {
        "label": "HelloApiView",
        "kind": 6,
        "importPath": "myApi.views",
        "description": "myApi.views",
        "peekOfCode": "class HelloApiView(APIView):\n    serializer_class = serializers.HelloSerializer\n    def get(self, request, format=None):\n        response_obj = ['hello', 'how you', 'what']\n        return Response({'message' : 'Success', 'obj' : response_obj})\n    def post(self, request):\n        serializer = self.serializer_class(data=request.data)\n        if serializer.is_valid():\n            name = serializer.validated_data.get('name')\n            message = f'hello {name }'",
        "detail": "myApi.views",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "profiles.settings",
        "description": "profiles.settings",
        "peekOfCode": "BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = '$g(4**2g&z!r*3%yvtn0e0gy!8f@x=zf2q1&rdjvm6m4t2xy-v'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "profiles.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "profiles.settings",
        "description": "profiles.settings",
        "peekOfCode": "SECRET_KEY = '$g(4**2g&z!r*3%yvtn0e0gy!8f@x=zf2q1&rdjvm6m4t2xy-v'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "profiles.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "profiles.settings",
        "description": "profiles.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "profiles.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "profiles.settings",
        "description": "profiles.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',",
        "detail": "profiles.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "profiles.settings",
        "description": "profiles.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'rest_framework.authtoken',\n    'myApi'",
        "detail": "profiles.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "profiles.settings",
        "description": "profiles.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'profiles.urls'",
        "detail": "profiles.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "profiles.settings",
        "description": "profiles.settings",
        "peekOfCode": "ROOT_URLCONF = 'profiles.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "profiles.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "profiles.settings",
        "description": "profiles.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "profiles.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "profiles.settings",
        "description": "profiles.settings",
        "peekOfCode": "WSGI_APPLICATION = 'profiles.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/2.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n# Password validation",
        "detail": "profiles.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "profiles.settings",
        "description": "profiles.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "profiles.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "profiles.settings",
        "description": "profiles.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "profiles.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "profiles.settings",
        "description": "profiles.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/2.2/howto/static-files/\nSTATIC_URL = '/static/'\nAUTH_USER_MODEL = 'myApi.UserProfile'",
        "detail": "profiles.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "profiles.settings",
        "description": "profiles.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/2.2/howto/static-files/\nSTATIC_URL = '/static/'\nAUTH_USER_MODEL = 'myApi.UserProfile'",
        "detail": "profiles.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "profiles.settings",
        "description": "profiles.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/2.2/howto/static-files/\nSTATIC_URL = '/static/'\nAUTH_USER_MODEL = 'myApi.UserProfile'",
        "detail": "profiles.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "profiles.settings",
        "description": "profiles.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/2.2/howto/static-files/\nSTATIC_URL = '/static/'\nAUTH_USER_MODEL = 'myApi.UserProfile'",
        "detail": "profiles.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "profiles.settings",
        "description": "profiles.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/2.2/howto/static-files/\nSTATIC_URL = '/static/'\nAUTH_USER_MODEL = 'myApi.UserProfile'",
        "detail": "profiles.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "profiles.settings",
        "description": "profiles.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nAUTH_USER_MODEL = 'myApi.UserProfile'",
        "detail": "profiles.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "profiles.settings",
        "description": "profiles.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'myApi.UserProfile'",
        "detail": "profiles.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "profiles.urls",
        "description": "profiles.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/', include('myApi.urls'))\n]",
        "detail": "profiles.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "profiles.wsgi",
        "description": "profiles.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "profiles.wsgi",
        "documentation": {}
    },
    {
        "label": "SQL_DATABASE_URL",
        "kind": 5,
        "importPath": "TODO.database",
        "description": "TODO.database",
        "peekOfCode": "SQL_DATABASE_URL = \"sqlite:///./todos.db\"\nengine = create_engine(SQL_DATABASE_URL, connect_args ={ \"check_same_thread\": False})\nSessionLocal = sessionmaker(autocommit=False, autoflush = False, bind = engine)\nBase = declarative_base()",
        "detail": "TODO.database",
        "documentation": {}
    },
    {
        "label": "engine",
        "kind": 5,
        "importPath": "TODO.database",
        "description": "TODO.database",
        "peekOfCode": "engine = create_engine(SQL_DATABASE_URL, connect_args ={ \"check_same_thread\": False})\nSessionLocal = sessionmaker(autocommit=False, autoflush = False, bind = engine)\nBase = declarative_base()",
        "detail": "TODO.database",
        "documentation": {}
    },
    {
        "label": "SessionLocal",
        "kind": 5,
        "importPath": "TODO.database",
        "description": "TODO.database",
        "peekOfCode": "SessionLocal = sessionmaker(autocommit=False, autoflush = False, bind = engine)\nBase = declarative_base()",
        "detail": "TODO.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "kind": 5,
        "importPath": "TODO.database",
        "description": "TODO.database",
        "peekOfCode": "Base = declarative_base()",
        "detail": "TODO.database",
        "documentation": {}
    },
    {
        "label": "TodosRequest",
        "kind": 6,
        "importPath": "TODO.main",
        "description": "TODO.main",
        "peekOfCode": "class TodosRequest(BaseModel):\n    title :str = Field(min_length=3)\n    description :str = Field(min_length= 5, max_length=100)\n    priority : int = Field (gt=0, lt=6)\n    complete :bool\n@app.get('/', status_code= status.HTTP_200_OK)\nasync def get_all(db : db_dependency ):\n    return db.query(Todos).all()\n@app.get('/todos/{id}', status_code= status.HTTP_200_OK)\nasync def get_record(db : db_dependency, id : int = Path(gt=0)):",
        "detail": "TODO.main",
        "documentation": {}
    },
    {
        "label": "get_db",
        "kind": 2,
        "importPath": "TODO.main",
        "description": "TODO.main",
        "peekOfCode": "def get_db():\n    db = SessionLocal()\n    try:\n        yield db\n    finally :\n        db.close()\ndb_dependency = Annotated[Session, Depends(get_db)]\nclass TodosRequest(BaseModel):\n    title :str = Field(min_length=3)\n    description :str = Field(min_length= 5, max_length=100)",
        "detail": "TODO.main",
        "documentation": {}
    },
    {
        "label": "update_record",
        "kind": 2,
        "importPath": "TODO.main",
        "description": "TODO.main",
        "peekOfCode": "def update_record(db : db_dependency, new_record : TodosRequest, id : int = Path(gt=0)):\n    todo_modal = db.query(Todos).filter(Todos.id == id).first()\n    if todo_modal is None:\n        raise HTTPException(status_code=404, detail=\"detail requested not found\")\n    todo_modal.title = new_record.title\n    todo_modal.description = new_record.description\n    todo_modal.priority = new_record.priority\n    todo_modal.complete = new_record.complete\n    db.add(todo_modal)\n    db.commit()",
        "detail": "TODO.main",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "TODO.main",
        "description": "TODO.main",
        "peekOfCode": "app = FastAPI()\nmodels.Base.metadata.create_all(bind=engine)\ndef get_db():\n    db = SessionLocal()\n    try:\n        yield db\n    finally :\n        db.close()\ndb_dependency = Annotated[Session, Depends(get_db)]\nclass TodosRequest(BaseModel):",
        "detail": "TODO.main",
        "documentation": {}
    },
    {
        "label": "db_dependency",
        "kind": 5,
        "importPath": "TODO.main",
        "description": "TODO.main",
        "peekOfCode": "db_dependency = Annotated[Session, Depends(get_db)]\nclass TodosRequest(BaseModel):\n    title :str = Field(min_length=3)\n    description :str = Field(min_length= 5, max_length=100)\n    priority : int = Field (gt=0, lt=6)\n    complete :bool\n@app.get('/', status_code= status.HTTP_200_OK)\nasync def get_all(db : db_dependency ):\n    return db.query(Todos).all()\n@app.get('/todos/{id}', status_code= status.HTTP_200_OK)",
        "detail": "TODO.main",
        "documentation": {}
    },
    {
        "label": "Todos",
        "kind": 6,
        "importPath": "TODO.models",
        "description": "TODO.models",
        "peekOfCode": "class Todos(Base):\n    __tablename__ = 'todos'\n    id = Column(Integer,primary_key = True,index=True)\n    title = Column(String)\n    description = Column(String)\n    priority = Column(Integer)\n    complete = Column(Boolean, default = False)",
        "detail": "TODO.models",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'profiles.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc",
        "detail": "manage",
        "documentation": {}
    }
]